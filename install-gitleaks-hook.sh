#!/bin/bash

# Gitleaks Pre-commit Hook Installer
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è gitleaks —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è pre-commit hook

set -e

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –º–∏ –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó
check_git_repo() {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        error "–¶–µ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π! –°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–π—Ç–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π."
        exit 1
    fi
}

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏
detect_os() {
    case "$(uname -s)" in
        Darwin*)    echo "darwin" ;;
        Linux*)     echo "linux" ;;
        CYGWIN*|MINGW*|MSYS*) echo "windows" ;;
        *)          echo "unknown" ;;
    esac
}

# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏
detect_arch() {
    case "$(uname -m)" in
        x86_64|amd64) echo "x64" ;;
        arm64|aarch64) echo "arm64" ;;
        armv7*) echo "armv7" ;;
        *) echo "x64" ;; # default fallback
    esac
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è gitleaks
install_gitleaks() {
    log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è gitleaks..."

    local os=$(detect_os)
    local arch=$(detect_arch)

    if [ "$os" = "unknown" ]; then
        error "–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞"
        exit 1
    fi

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ gitleaks –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π
    if command -v gitleaks >/dev/null 2>&1; then
        local version=$(gitleaks version 2>/dev/null | head -n1 || echo "unknown")
        success "Gitleaks –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π: $version"
        return 0
    fi

    log "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –≤–µ—Ä—Å—ñ—ó gitleaks –¥–ª—è $os-$arch..."

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –≤–µ—Ä—Å—ñ—ó –∑ GitHub API
    local latest_version
    if command -v curl >/dev/null 2>&1; then
        latest_version=$(curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
    else
        error "curl –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å curl."
        exit 1
    fi

    if [ -z "$latest_version" ]; then
        error "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—é –≤–µ—Ä—Å—ñ—é gitleaks"
        exit 1
    fi

    log "–û—Å—Ç–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ—è: $latest_version"

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è URL –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    local filename
    if [ "$os" = "windows" ]; then
        filename="gitleaks_${latest_version#v}_${os}_${arch}.zip"
    else
        filename="gitleaks_${latest_version#v}_${os}_${arch}.tar.gz"
    fi

    local download_url="https://github.com/gitleaks/gitleaks/releases/download/${latest_version}/${filename}"
    local temp_dir=$(mktemp -d)

    log "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑: $download_url"

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è
    cd "$temp_dir"
    if ! curl -L -o "$filename" "$download_url"; then
        error "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è gitleaks"
        rm -rf "$temp_dir"
        exit 1
    fi

    if [ "$os" = "windows" ]; then
        unzip -q "$filename"
    else
        tar -xzf "$filename"
    fi

    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ —Å–∏—Å—Ç–µ–º—É
    local install_dir="/usr/local/bin"
    if [ ! -w "$install_dir" ]; then
        install_dir="$HOME/.local/bin"
        mkdir -p "$install_dir"

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ PATH —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if [[ ":$PATH:" != *":$install_dir:"* ]]; then
            warning "–î–æ–¥–∞–π—Ç–µ $install_dir –¥–æ –≤–∞—à–æ–≥–æ PATH:"
            echo "export PATH=\"\$PATH:$install_dir\""
        fi
    fi

    if [ "$os" = "windows" ]; then
        mv gitleaks.exe "$install_dir/"
    else
        mv gitleaks "$install_dir/"
    fi

    chmod +x "$install_dir/gitleaks"

    # –û—á–∏—â–µ–Ω–Ω—è
    rm -rf "$temp_dir"

    success "Gitleaks —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ $install_dir"
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-commit hook
create_pre_commit_hook() {
    log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-commit hook..."

    local git_dir=$(git rev-parse --git-dir)
    local hooks_dir="$git_dir/hooks"
    local hook_file="$hooks_dir/pre-commit"

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó hooks —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
    mkdir -p "$hooks_dir"

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è pre-commit hook
    cat > "$hook_file" << 'EOF'
#!/bin/bash

# Gitleaks Pre-commit Hook
# –ü–µ—Ä–µ–≤—ñ—Ä—è—î –∫–æ–¥ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç—ñ–≤ –ø–µ—Ä–µ–¥ –∫–æ–º—ñ—Ç–æ–º

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∫–ª—é—á–µ–Ω–∏–π gitleaks hook
if [ "$(git config --bool hooks.gitleaks)" = "false" ]; then
    echo -e "${YELLOW}Gitleaks hook –≤–∏–º–∫–Ω–µ–Ω–∏–π. –î–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–π—Ç–µ:${NC}"
    echo "git config hooks.gitleaks true"
    exit 0
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ gitleaks
if ! command -v gitleaks >/dev/null 2>&1; then
    echo -e "${RED}ERROR: gitleaks –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!${NC}"
    echo "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å gitleaks: ./install-gitleaks-hook.sh"
    exit 1
fi

echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–µ–∫—Ä–µ—Ç—ñ–≤ –∑ gitleaks...${NC}"

# –ó–∞–ø—É—Å–∫ gitleaks –¥–ª—è staged —Ñ–∞–π–ª—ñ–≤
if ! gitleaks protect --staged --verbose; then
    echo -e "${RED}‚ùå –ö–û–ú–Ü–¢ –í–Ü–î–•–ò–õ–ï–ù–û!${NC}"
    echo -e "${RED}–í–∏—è–≤–ª–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ —Å–µ–∫—Ä–µ—Ç–∏ –≤ –∫–æ–¥—ñ.${NC}"
    echo
    echo -e "${YELLOW}–î–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏:${NC}"
    echo "1. –í–∏–¥–∞–ª—ñ—Ç—å —Å–µ–∫—Ä–µ—Ç–∏ –∑ –∫–æ–¥—É"
    echo "2. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è"
    echo "3. –î–æ–¥–∞–π—Ç–µ —Ñ–∞–π–ª–∏ –¥–æ .gitleaksignore (—è–∫—â–æ —Ü–µ false positive)"
    echo
    echo -e "${YELLOW}–î–ª—è —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:${NC}"
    echo "git config hooks.gitleaks false"
    echo
    exit 1
fi

echo -e "${GREEN}‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç—ñ–≤ –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ!${NC}"
exit 0
EOF

    # –†–æ–±–∏–º–æ hook –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–º
    chmod +x "$hook_file"

    success "Pre-commit hook —Å—Ç–≤–æ—Ä–µ–Ω–æ: $hook_file"
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó gitleaks
create_gitleaks_config() {
    log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó gitleaks..."

    if [ ! -f ".gitleaks.toml" ]; then
        cat > ".gitleaks.toml" << 'EOF'
# Gitleaks configuration file

[extend]
# useDefault will extend the base configuration with the default gitleaks config:
# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
useDefault = true

[allowlist]
description = "Allowlist for specific patterns that are safe"
# regexes = [
#   '''219-09-9999''', # fake SSN
#   '''078-05-1120''', # fake SSN
# ]
# paths = [
#   '''.*_test\.go''',
#   '''.*\.md''',
# ]
# commits = [
#   "allowedcommithashhere"
# ]

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Å–µ–∫—Ä–µ—Ç—ñ–≤
[[rules]]
id = "telegram-bot-token"
description = "Telegram Bot Token"
regex = '''[0-9]{8,10}:[a-zA-Z0-9_-]{35}'''
tags = ["telegram", "bot", "token"]

[[rules]]
id = "ukrainian-api-key"
description = "Generic Ukrainian API Key"
regex = '''(?i)(api[_-]?key|apikey)['":\s]*[=:]\s*['"][a-zA-Z0-9_-]{20,}['"]'''
tags = ["api", "key"]
EOF
        success "–°—Ç–≤–æ—Ä–µ–Ω–æ .gitleaks.toml –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"
    else
        warning ".gitleaks.toml –≤–∂–µ —ñ—Å–Ω—É—î"
    fi

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .gitleaksignore —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
    if [ ! -f ".gitleaksignore" ]; then
        cat > ".gitleaksignore" << 'EOF'
# Gitleaks ignore patterns
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ü–µ–π —Ñ–∞–π–ª –¥–ª—è —ñ–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è false positive —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤

# –ü—Ä–∏–∫–ª–∞–¥–∏:
# secrets.example.txt:generic-api-key:1
# README.md:telegram-bot-token:15
EOF
        success "–°—Ç–≤–æ—Ä–µ–Ω–æ .gitleaksignore —Ñ–∞–π–ª"
    else
        warning ".gitleaksignore –≤–∂–µ —ñ—Å–Ω—É—î"
    fi
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è git config
configure_git() {
    log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è git –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."

    # –í–∫–ª—é—á–µ–Ω–Ω—è gitleaks hook –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    git config hooks.gitleaks true

    success "Git –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ"
}

# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
test_installation() {
    log "–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ gitleaks
    if ! command -v gitleaks >/dev/null 2>&1; then
        error "Gitleaks –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ PATH"
        return 1
    fi

    local version=$(gitleaks version 2>/dev/null | head -n1 || echo "unknown")
    success "Gitleaks –≤–µ—Ä—Å—ñ—è: $version"

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ hook
    local git_dir=$(git rev-parse --git-dir)
    local hook_file="$git_dir/hooks/pre-commit"

    if [ -x "$hook_file" ]; then
        success "Pre-commit hook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —ñ –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–π"
    else
        error "Pre-commit hook –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–π"
        return 1
    fi

    success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    echo -e "${BLUE}================================================${NC}"
    echo -e "${BLUE} Gitleaks Pre-commit Hook Installer${NC}"
    echo -e "${BLUE}================================================${NC}"
    echo

    check_git_repo
    install_gitleaks
    create_pre_commit_hook
    create_gitleaks_config
    configure_git
    test_installation

    echo
    echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo
    echo -e "${YELLOW}–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:${NC}"
    echo "‚Ä¢ Hook –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ git commit"
    echo "‚Ä¢ –î–ª—è –≤–∏–º–∫–Ω–µ–Ω–Ω—è: git config hooks.gitleaks false"
    echo "‚Ä¢ –î–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è: git config hooks.gitleaks true"
    echo "‚Ä¢ –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: gitleaks protect --staged"
    echo
    echo -e "${YELLOW}–§–∞–π–ª–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:${NC}"
    echo "‚Ä¢ .gitleaks.toml - –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è gitleaks"
    echo "‚Ä¢ .gitleaksignore - —Ñ–∞–π–ª –¥–ª—è —ñ–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è false positive"
    echo
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
